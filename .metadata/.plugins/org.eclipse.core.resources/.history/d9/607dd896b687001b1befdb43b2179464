package com.example.demo.sec.domain;

import java.util.Base64;
import java.util.Collection;

import javax.annotation.PostConstruct;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.stereotype.Component;

import io.jsonwebtoken.Jwts;
import lombok.RequiredArgsConstructor;





@RequiredArgsConstructor
@Component
public class JwtTokenProvider {
	 @Value("spring.jwt.secret")
	    private String SECRET_KEY;

	    private long tokenValidMilisecond = 1000L * 60 * 60; // 1시간만 토큰 유효

	    private final UserDetailsService userDetailsService;
	    
	    @PostConstruct
	    protected void init() {
	    	SECRET_KEY = Base64.getEncoder().encodeToString(SECRET_KEY.getBytes());
	    }
	    
	    public String createToken(String userPk, Collection<? extends GrantedAuthority> roles) {
	    	claims claims = Jwts.claims().setSubject(userPk);
	    	return "";
	    }
}
